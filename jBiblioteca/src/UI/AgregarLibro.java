/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
package UI;

import UI.classes.arbol.Libro;
import examples.classes.*;
import examples.classes.cuarto.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class AgregarLibro extends javax.swing.JFrame {

    private String ISBN, titulo, autor, editorial, categoria, idioma, descripcion, fecha_lanzamiento, fecha_ingreso;
    private int paginas, cantidad_ejemplares;

    /**
     * Creates new form ContactEditor
     */
    public AgregarLibro() {
        initComponents();
        this.setLocationRelativeTo(null);
        AutoCompleteDecorator.decorate(cbEditorial);
        AutoCompleteDecorator.decorate(cbCategoria);
        AutoCompleteDecorator.decorate(cbIdioma);
        
        String[] paginasArray = new String[3000];
        for (int i = 0; i <= paginasArray.length; i++) {
            cbPaginas.addItem(String.valueOf(i + 1));
        }
        AutoCompleteDecorator.decorate(cbPaginas);
        
        String[] ejemplaresArray = new String[500];
        for (int i = 0; i <= ejemplaresArray.length; i++) {
            cbCantidadEjemplares.addItem(String.valueOf(i + 1));
        }
        AutoCompleteDecorator.decorate(cbCantidadEjemplares);
        
        txtDescripcion.setLineWrap(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtAutor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbIdioma = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dpLanzamiento = new org.jdesktop.swingx.JXDatePicker();
        dpIngreso = new org.jdesktop.swingx.JXDatePicker();
        cbEditorial = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtISBN = new javax.swing.JTextField();
        cbPaginas = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        cbCantidadEjemplares = new javax.swing.JComboBox();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        jTextField1.setText("jTextField1");

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MULTIBANG");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Requeridos"));

        jLabel1.setText("*TITULO:");

        txtTitulo.setForeground(java.awt.SystemColor.textInactiveText);
        txtTitulo.setText("Luces de bohemia: esperpento");
        txtTitulo.setToolTipText("Requerido");
        txtTitulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTituloFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTituloFocusLost(evt);
            }
        });
        txtTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTituloKeyReleased(evt);
            }
        });

        jLabel5.setText("*IDIOMA:");

        cbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Policial (o Thriller)", "Romántica", "Aventura", "Terror", "Ficcion / Realidad", "Ciencia Ficción", "Investigación", "Biográfica", "Infantil", "Autoayuda", "Erótica", "Hogar", "Enciclopedia / Manual", "Política", "Economía / Marketing", "Sociedad", "Deportes", "Viajes / Cultura", "Otros temas / Varios" }));
        cbCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoriaItemStateChanged(evt);
            }
        });

        jLabel2.setText("*AUTOR:");

        txtAutor.setForeground(java.awt.SystemColor.textInactiveText);
        txtAutor.setText("Ramon del Valle-Inclan");
        txtAutor.setToolTipText("Requerido");
        txtAutor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAutorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAutorFocusLost(evt);
            }
        });
        txtAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAutorKeyReleased(evt);
            }
        });

        jLabel3.setText("*EDITORIAL:");

        jLabel4.setText("*CATEGORIA:");

        cbIdioma.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Español", "Inglés", "Francés", "Alemán", "Portugués" }));
        cbIdioma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbIdiomaItemStateChanged(evt);
            }
        });

        jLabel6.setText("*NÚMERO DE PÁGINAS:");

        txtDescripcion.setColumns(20);
        txtDescripcion.setForeground(java.awt.SystemColor.textInactiveText);
        txtDescripcion.setRows(5);
        txtDescripcion.setText("Literatura española. Teatro. Melodramas. Comedias de misterio. Teatro popular.");
        txtDescripcion.setToolTipText("Requerido");
        txtDescripcion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescripcionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescripcionFocusLost(evt);
            }
        });
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescripcion);

        jLabel7.setText("*DESCRIPCION DEL LIBRO:");

        jLabel8.setText("*INGRESO:");

        jLabel9.setText("*FECHA DE LANZAMIENTO:");

        dpLanzamiento.setToolTipText("Requerido");
        dpLanzamiento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dpLanzamientoPropertyChange(evt);
            }
        });

        dpIngreso.setToolTipText("Requerido");
        dpIngreso.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dpIngresoPropertyChange(evt);
            }
        });

        cbEditorial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Acantilado", "Aguilar", "Akal", "Alba", "Alfaguara", "Alianza", "Almadía", "Alpha Decay", "Ariel", "Atalanta", "Booket", "Caja Negra", "Cátedra", "Crítica", "Debolsillo", "Fondo de Cultura Económica", "Galaxia Gutenberg", "Gallo Nero", "Gredos", "Gustavo Gili", "Herder", "Impedimenta", "Joaquín Mortiz", "La esfera de los libros", "Library of America", "Lumen", "Nevsky", "Olañeta", "Paidós", "Penguin Books", "Phaidon", "Planeta", "Plaza y Janés", "RM", "Sajalín", "Salamandra", "Santillana", "Satori", "Seix Barral", "Sexto Piso", "Siglo XXI", "Siruela", "Taschen", "Taurus", "Trotta", "Tusquets", "Urano", "Valdemar" }));
        cbEditorial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbEditorialItemStateChanged(evt);
            }
        });

        jLabel10.setText("*ISBN:");

        txtISBN.setForeground(java.awt.SystemColor.textInactiveText);
        txtISBN.setText("978-3-16-148410-0");
        txtISBN.setToolTipText("Requerido");
        txtISBN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtISBNFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtISBNFocusLost(evt);
            }
        });
        txtISBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtISBNKeyReleased(evt);
            }
        });

        cbPaginas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPaginasItemStateChanged(evt);
            }
        });

        jLabel11.setText("CANTIDAD DE EJEMPLARES:");

        cbCantidadEjemplares.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCantidadEjemplaresItemStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel8)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel9)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel6)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel10)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel11)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(cbCantidadEjemplares, 0, 210, Short.MAX_VALUE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, dpIngreso, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cbIdioma, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cbCategoria, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cbPaginas, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cbEditorial, 0, 1, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtAutor)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtTitulo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtISBN)
                        .add(dpLanzamiento, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel7)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtISBN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtTitulo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtAutor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(cbEditorial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(cbPaginas, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(cbCategoria, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(cbIdioma, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(dpLanzamiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel8)
                            .add(dpIngreso, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel11)
                            .add(cbCantidadEjemplares, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jScrollPane1))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        jMenuItem6.setText("Salir");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(btnGuardar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancelar))
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {btnCancelar, btnGuardar}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnCancelar)
                    .add(btnGuardar))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleName("Ingresar Libro");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCategoriaItemStateChanged
        // TODO add your handling code here:
        categoria = evt.getItem().toString();
        checkForEmptyFields();
    }//GEN-LAST:event_cbCategoriaItemStateChanged

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        Admin window = new Admin();
        this.dispose();
        window.setVisible(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtTituloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyReleased
        // TODO add your handling code here:
        titulo = txtTitulo.getText();
        checkForEmptyFields();
    }//GEN-LAST:event_txtTituloKeyReleased

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:

        int id = Admin.arbol.getId();

        Admin.arbol.inserta(new Libro(id, ISBN, titulo, autor, editorial, categoria, idioma, descripcion, fecha_lanzamiento, fecha_ingreso, paginas, cantidad_ejemplares));

        //Admin.libro.inserta(new Libro(temp_id, nombre, autor, categoria, editorial, idioma, descripcion, fecha_lazamiento, fecha_ingreso, paginas));
        //JOptionPane.showMessageDialog(this, "Libro ha sido guardado!", "En hora buena", JOptionPane.INFORMATION_MESSAGE);
        //resetFields();
        ListarLibros window = new ListarLibros();
        this.dispose();
        window.setVisible(true);

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // SALIR
        System.exit(0);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void txtAutorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAutorKeyReleased
        // TODO add your handling code here:
        autor = txtAutor.getText();
        checkForEmptyFields();
    }//GEN-LAST:event_txtAutorKeyReleased

    private void cbIdiomaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbIdiomaItemStateChanged
        // TODO add your handling code here:
        idioma = evt.getItem().toString();
        checkForEmptyFields();
    }//GEN-LAST:event_cbIdiomaItemStateChanged

    private void cbEditorialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEditorialItemStateChanged
        // TODO add your handling code here:
        editorial = evt.getItem().toString();
        checkForEmptyFields();
    }//GEN-LAST:event_cbEditorialItemStateChanged

    private void dpLanzamientoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dpLanzamientoPropertyChange
        // TODO add your handling code here:
        if (dpLanzamiento.isShowing()) {
            fecha_lanzamiento = dpLanzamiento.getEditor().getText();
            checkForEmptyFields();
        }
    }//GEN-LAST:event_dpLanzamientoPropertyChange

    private void dpIngresoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dpIngresoPropertyChange
        // TODO add your handling code here:
        if (dpIngreso.isShowing()) {
            fecha_ingreso = dpIngreso.getEditor().getText();
            checkForEmptyFields();
        }
    }//GEN-LAST:event_dpIngresoPropertyChange

    private void txtDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyReleased
        // TODO add your handling code here:
        descripcion = txtDescripcion.getText();
        checkForEmptyFields();
    }//GEN-LAST:event_txtDescripcionKeyReleased

    private void txtISBNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtISBNKeyReleased
        // TODO add your handling code here:
        ISBN = txtISBN.getText();
        checkForEmptyFields();
    }//GEN-LAST:event_txtISBNKeyReleased

    private void cbPaginasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPaginasItemStateChanged
        // TODO add your handling code here:
        paginas = Integer.parseInt(evt.getItem().toString());
        checkForEmptyFields();
    }//GEN-LAST:event_cbPaginasItemStateChanged

    private void txtISBNFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtISBNFocusGained
        // TODO add your handling code here:
        if (txtISBN.getText().equals("978-3-16-148410-0")) {
            txtISBN.setText("");
            txtISBN.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtISBNFocusGained

    private void txtISBNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtISBNFocusLost
        // TODO add your handling code here:
        if (txtISBN.getText().isEmpty()) {
            txtISBN.setForeground(Color.GRAY);
            txtISBN.setText("978-3-16-148410-0");
        }
    }//GEN-LAST:event_txtISBNFocusLost

    private void txtTituloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTituloFocusGained
        // TODO add your handling code here:
        if (txtTitulo.getText().equals("Luces de bohemia: esperpento")) {
            txtTitulo.setText("");
            txtTitulo.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtTituloFocusGained

    private void txtTituloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTituloFocusLost
        // TODO add your handling code here:
        if (txtTitulo.getText().isEmpty()) {
            txtTitulo.setForeground(Color.GRAY);
            txtTitulo.setText("Luces de bohemia: esperpento");
        }
    }//GEN-LAST:event_txtTituloFocusLost

    private void txtAutorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAutorFocusGained
        // TODO add your handling code here:
        if (txtAutor.getText().equals("Ramon del Valle-Inclan")) {
            txtAutor.setText("");
            txtAutor.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtAutorFocusGained

    private void txtAutorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAutorFocusLost
        // TODO add your handling code here:
        if (txtAutor.getText().isEmpty()) {
            txtAutor.setForeground(Color.GRAY);
            txtAutor.setText("Ramon del Valle-Inclan");
        }
    }//GEN-LAST:event_txtAutorFocusLost

    private void txtDescripcionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionFocusGained
        // TODO add your handling code here:
        if (txtDescripcion.getText().equals("Literatura española. Teatro. Melodramas. Comedias de misterio. Teatro popular.")) {
            txtDescripcion.setText("");
            txtDescripcion.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtDescripcionFocusGained

    private void txtDescripcionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionFocusLost
        // TODO add your handling code here:
        if (txtDescripcion.getText().isEmpty()) {
            txtDescripcion.setForeground(Color.GRAY);
            txtDescripcion.setText("Literatura española. Teatro. Melodramas. Comedias de misterio. Teatro popular.");
        }
    }//GEN-LAST:event_txtDescripcionFocusLost

    private void cbCantidadEjemplaresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCantidadEjemplaresItemStateChanged
        // TODO add your handling code here:
        cantidad_ejemplares = Integer.parseInt(evt.getItem().toString());
        checkForEmptyFields();
    }//GEN-LAST:event_cbCantidadEjemplaresItemStateChanged

    private void checkForEmptyFields() {

        if (txtISBN.getText().isEmpty()
                || txtTitulo.getText().isEmpty()
                || txtAutor.getText().isEmpty()
                || txtDescripcion.getText().isEmpty()
                || dpLanzamiento.getEditor().getText().isEmpty()
                || dpIngreso.getEditor().getText().isEmpty()
                || cbPaginas.getSelectedItem().toString().isEmpty()
                || cbCantidadEjemplares.getSelectedItem().toString().isEmpty()) {
            btnGuardar.setEnabled(false);
        } else {
            ISBN = txtISBN.getText();
            titulo = txtTitulo.getText();
            autor = txtAutor.getText();
            categoria = cbCategoria.getSelectedItem().toString();
            editorial = cbEditorial.getSelectedItem().toString();
            idioma = cbIdioma.getSelectedItem().toString();
            descripcion = txtTitulo.getText();
            fecha_lanzamiento = dpLanzamiento.getEditor().getText();
            fecha_ingreso = dpIngreso.getEditor().getText();
            paginas = Integer.parseInt(cbPaginas.getSelectedItem().toString());
            cantidad_ejemplares = Integer.parseInt(cbCantidadEjemplares.getSelectedItem().toString());
            descripcion = txtDescripcion.getText();
            btnGuardar.setEnabled(true);
        }

    }

    private void resetFields() {

        txtISBN.setText("");
        txtTitulo.setText("");
        txtAutor.setText("");
        cbCategoria.setSelectedIndex(0);
        cbEditorial.setSelectedIndex(0);
        cbIdioma.setSelectedIndex(0);
        cbPaginas.setSelectedItem(0);
        txtDescripcion.setText("");
        dpLanzamiento.getEditor().getText();
        dpIngreso.getEditor().getText();
        btnGuardar.setEnabled(false);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx = 0; idx < installedLookAndFeels.length; idx++) {
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarLibro().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbCantidadEjemplares;
    private javax.swing.JComboBox cbCategoria;
    private javax.swing.JComboBox cbEditorial;
    private javax.swing.JComboBox cbIdioma;
    private javax.swing.JComboBox cbPaginas;
    private org.jdesktop.swingx.JXDatePicker dpIngreso;
    private org.jdesktop.swingx.JXDatePicker dpLanzamiento;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables

}
